// Generated by view binder compiler. Do not edit!
package com.example.lifesimulator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lifesimulator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FragmentContainerView fragmentAfficPersonnes;

  @NonNull
  public final FragmentContainerView fragmentAjoutPersonne;

  @NonNull
  public final FragmentContainerView fragmentBureau;

  @NonNull
  public final FragmentContainerView fragmentConnexion;

  @NonNull
  public final FragmentContainerView fragmentInfos;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FragmentContainerView fragmentAfficPersonnes,
      @NonNull FragmentContainerView fragmentAjoutPersonne,
      @NonNull FragmentContainerView fragmentBureau,
      @NonNull FragmentContainerView fragmentConnexion,
      @NonNull FragmentContainerView fragmentInfos, @NonNull ConstraintLayout main,
      @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.fragmentAfficPersonnes = fragmentAfficPersonnes;
    this.fragmentAjoutPersonne = fragmentAjoutPersonne;
    this.fragmentBureau = fragmentBureau;
    this.fragmentConnexion = fragmentConnexion;
    this.fragmentInfos = fragmentInfos;
    this.main = main;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragmentAfficPersonnes;
      FragmentContainerView fragmentAfficPersonnes = ViewBindings.findChildViewById(rootView, id);
      if (fragmentAfficPersonnes == null) {
        break missingId;
      }

      id = R.id.fragmentAjoutPersonne;
      FragmentContainerView fragmentAjoutPersonne = ViewBindings.findChildViewById(rootView, id);
      if (fragmentAjoutPersonne == null) {
        break missingId;
      }

      id = R.id.fragmentBureau;
      FragmentContainerView fragmentBureau = ViewBindings.findChildViewById(rootView, id);
      if (fragmentBureau == null) {
        break missingId;
      }

      id = R.id.fragmentConnexion;
      FragmentContainerView fragmentConnexion = ViewBindings.findChildViewById(rootView, id);
      if (fragmentConnexion == null) {
        break missingId;
      }

      id = R.id.fragmentInfos;
      FragmentContainerView fragmentInfos = ViewBindings.findChildViewById(rootView, id);
      if (fragmentInfos == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityMainBinding((ConstraintLayout) rootView, fragmentAfficPersonnes,
          fragmentAjoutPersonne, fragmentBureau, fragmentConnexion, fragmentInfos, main,
          binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
